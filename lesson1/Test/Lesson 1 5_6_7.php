
<?php

    // Задание 5

        class A {
            public function foo() {
                static $x = 0; // Объявление статической переменной. Существует только в локальной области видимости функции, но не теряет своего значения.
                echo ++$x; // Инкремент статической переменной
            }
        }
        $a1 = new A(); // Обращение к св-вам класса А, через объект
        $a2 = new A(); // Обращение к св-вам класса А, через объект
        $a1->foo(); // Вызов метода foo класса А ($x=0+1, значение $x=1 сохраняется)
        $a2->foo(); // Вызов метода foo класса А ($x=1+1, значение $x=2 сохраняется)
        $a1->foo(); // Вызов метода foo класса А ($x=2+1, значение $x=3 сохраняется)
        $a2->foo(); // Вызов метода foo класса А ($x=3+1, значение $x=4 сохраняется)
        echo "<br>";

    // Задание 6

        class X {
            public function foo() {
                static $x = 0; // Объявление статической переменной. Существует только в локальной области видимости функции, но не теряет своего значения.
                echo ++$x; // Инкремент статической переменной
            }
        }
        class B extends X { // Наследование классом B свойств класса Х
        }
        $a1 = new X(); // Обращение к св-вам класса Х, через объект
        $b1 = new B(); // Обращение к св-вам класса B, через объект
        $a1->foo(); // Вызов метода foo класса X ($x=0+1, значение $x=1 сохраняется)
        $b1->foo(); //Вызов метода foo класса B ($x=1, значение $x=1 наследуется от класса X)
        $a1->foo(); // Вызов метода foo класса X ($x=1+1, значение $x=2 сохраняется)
        $b1->foo(); // Вызов метода foo класса B ($x=1+1, значение $x=2 наследуется от класса Х)
        echo "<br>";

    // Задание 7 (Отличие от Задания 6 только в том, что при создании объектов, не установлены
    //            круглые скобки после имени объекта, что, при отсутствии передаваемых параметров, никак не влияет на результат)

        class Y {
            public function foo() {
                static $x = 0;
                echo ++$x;
            }
        }
        class Z extends Y {
        }
        $a1 = new Y;
        $b1 = new Z;
        $a1->foo();
        $b1->foo();
        $a1->foo();
        $b1->foo();
